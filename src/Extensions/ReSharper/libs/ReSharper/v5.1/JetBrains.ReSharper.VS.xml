<?xml version="1.0"?>
<doc>
    <assembly>
        <name>JetBrains.ReSharper.VS</name>
    </assembly>
    <members>
        <member name="M:JetBrains.ReSharper.VS.Actions.ShowOfflineHelpAction.JetBrains#ActionManagement#IActionHandler#Execute(JetBrains.ActionManagement.IDataContext,JetBrains.ActionManagement.DelegateExecute)">
            <summary>
            Executes action. Called after Update, that set ActionPresentation.Enabled to true.
            </summary>
            <param name="context">DataContext</param>
            <param name="nextExecute">delegate to call</param>
        </member>
        <member name="M:JetBrains.ReSharper.VS.Actions.ShowOfflineHelpAction.JetBrains#ActionManagement#IActionHandler#Update(JetBrains.ActionManagement.IDataContext,JetBrains.ActionManagement.ActionPresentation,JetBrains.ActionManagement.DelegateUpdate)">
            <summary>
            Updates action visual presentation. If presentation.Enabled is set to false, Execute
            will not be called.
            </summary>
            <param name="context">DataContext</param>
            <param name="presentation">presentation to update</param>
            <param name="nextUpdate">delegate to call</param>
        </member>
        <member name="F:JetBrains.ReSharper.VS.src.ActivityTracking.ProductUsageFeedbackForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.VS.src.ActivityTracking.ProductUsageFeedbackForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:JetBrains.ReSharper.VS.src.ActivityTracking.ProductUsageFeedbackForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.VS.Customization.ReSharperPkg.Info">
            <summary>
            Package description, mostly for shell-less installers.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.VS.Customization.ReSharperPkg.Info.PackageAssemblyFullName">
            <summary>
            The full qualified assembly name of the .NET class that implements the package (<see cref="P:System.Reflection.AssemblyName.FullName"/>).
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.VS.Customization.ReSharperPkg.Info.PackageAssemblyName">
            <summary>
            The short assembly name of the .NET class that implements the package (<see cref="P:System.Reflection.AssemblyName.Name"/>).
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.VS.Customization.ReSharperPkg.Info.PackageClass">
            <summary>
            An FQN of the .NET class that implements the package (<see cref="P:System.Type.FullName"/>).
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.VS.Customization.ReSharperPkg.Info.PackageCompanyName">
            <summary>
            Name of the company, as specified in the Package Key registered at Microsoft.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.VS.Customization.ReSharperPkg.Info.PackageGuid">
            <summary>
            Guid of the .NET class that implements the package (<see cref="P:System.Type.GUID"/>).
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.VS.Customization.ReSharperPkg.Info.PackageKeyResourceId">
            <summary>
            ID of the resource that contains the package key (PLK).
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.VS.Customization.ReSharperPkg.Info.PackageMagicMenuValue">
            <summary>
            Value for the Menus registry data value.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.VS.Customization.ReSharperPkg.Info.PackageMinEdition">
            <summary>
            VS min edition for the package.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.VS.Customization.ReSharperPkg.Info.PackageName">
            <summary>
            Name of the package.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.VS.Customization.ReSharperPkg.Info.PackageProductName">
            <summary>
            Name of the product, as specified in the Package Key registered at Microsoft.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.VS.Customization.ReSharperPkg.Info.PackageProductVersion">
            <summary>
            Version of the product, as specified in the Package Key registered at Microsoft.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.VS.Customization.ReSharperLicenseSupport.ReSharperLicenseRegistryInstaller.InstallStatic(JetBrains.Application.Install.Installer)">
            <summary>
            Called once on the object during the registration process.
            </summary>
            <param name="installer">The installer object that provides the installation data.</param>
            <returns>The list of the Registry entries to write, or <c>Null</c> if none.</returns>
        </member>
        <member name="M:JetBrains.ReSharper.VS.Customization.ReSharperLicenseSupport.ReSharperLicenseRegistryInstaller.InstallInstance(JetBrains.Application.Install.Installer,System.Object)">
            <summary>
            Called for each of the attributes of the requested type encountered in the known assemblies.
            </summary>
            <param name="installer">The installer object that provides the installation data.</param>
            <param name="attributeInstance">Instance of the attribute to process.</param>
            <returns>The list of the Registry entries to write, or <c>Null</c> if none.</returns>
        </member>
        <member name="T:JetBrains.ReSharper.VS.Customization.ReSharperApplicationDescriptor">
            <summary>
            Describes the ReSharper Product properites.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.VS.Customization.ReSharperApplicationDescriptor.#ctor">
            <summary>
            Constructs the application descriptor, specifying the configuration it should run in.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.VS.Customization.ReSharperApplicationDescriptor.OnGetLegacySettingsFiles">
            <summary>
            When there're no settings for the new version, helps with looking for them in the pre-common-settings-numbering-scheme folders.
            </summary>
            <returns></returns>
        </member>
        <member name="M:JetBrains.ReSharper.VS.Customization.ReSharperApplicationDescriptor.OnShowWebHelp(System.String)">
            <summary>
            Displays the product context help on the Web.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.VS.Customization.ReSharperApplicationDescriptor.StartShell(JetBrains.VsIntegration.Package.VsPackage)">
            <summary>
            <para>Starts the application shell based on this application descriptor and theService Provider of the Visual Studio instance.</para>
            <para>The <see cref="P:JetBrains.Application.Shell.HasInstance"/> is expected to be <c>True</c> after this method returns. It's an error to call this method if already <see cref="P:JetBrains.Application.Shell.HasInstance"/> is <c>True</c>.</para>
            <para>See notes on <see cref="T:JetBrains.Application.IApplicationDescriptor"/> for info on how Shells and Application Descriptors work together, and how this method should be implemented.</para>
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.VS.Customization.ReSharperApplicationDescriptor.AllAssembliesResourceAssembly">
            <summary>
            Gets the assembly that contains the <see cref="P:JetBrains.Application.ApplicationDescriptor.AllAssembliesXml"/> data.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.VS.Customization.ReSharperApplicationDescriptor.AllAssembliesResourceName">
            <summary>
            Gets the name of the resource in <see cref="P:JetBrains.Application.IApplicationDescriptor.AllAssembliesResourceAssembly"/> that contains the serialized <see cref="P:JetBrains.Application.IApplicationDescriptor.AllAssembliesXml"/> data.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.VS.Customization.ReSharperApplicationDescriptor.BmpForSplashScreenResourceId">
            <summary>
            WinAPI resource ID for the Splash Screen icon, see <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsInstalledProduct.IdBmpSplash(System.UInt32@)"/>.
            Note that this resource must either reside in a satellite resource DLL or be specifically compiled into RESX.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.VS.Customization.ReSharperApplicationDescriptor.BuyURL">
            <summary>
            Gets the URL that takes to the “Buy Product” page.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.VS.Customization.ReSharperApplicationDescriptor.DoCheckLicenseReuseOverNetwork">
            <summary>
            Determines whether the product should check for multiple instances running simultaneousely over the network.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.VS.Customization.ReSharperApplicationDescriptor.EvaluationURL">
            <summary>
            Gets the URL that takes to the page that provides an eval license.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.VS.Customization.ReSharperApplicationDescriptor.IcoLogoForAboutBoxResourceId">
            <summary>
            WinAPI resource ID for the About Box icon, see <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsInstalledProduct.IdIcoLogoForAboutbox(System.UInt32@)"/>.
            Note that this resource must either reside in a satellite resource DLL or be specifically compiled into RESX.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.VS.Customization.ReSharperApplicationDescriptor.Package">
            <summary>
            Gets the type of the class that implements the Visual Studio Package interface.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.VS.Customization.ReSharperApplicationDescriptor.ProductAboutBoxImage">
            <summary>
            AboutBox for the product shows this image. Recommended minimum width: <c>200h</c>.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.VS.Customization.ReSharperApplicationDescriptor.ProductBirthDate">
            <summary>
            The birth date of the product. Used for the lower copyright year and so on.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.VS.Customization.ReSharperApplicationDescriptor.ProductFullName">
            <summary>
            Gets the product full name, which is typically the <see cref="P:JetBrains.Application.IApplicationDescriptor.ProductName"/> plus the short version number.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.VS.Customization.ReSharperApplicationDescriptor.ProductIcon">
            <summary>
            Gets the product icon.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.VS.Customization.ReSharperApplicationDescriptor.ProductName">
            <summary>
            Gets the bare product name in the shortest form (no company, no version).
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.VS.Customization.ReSharperApplicationDescriptor.ProductPreviewExtensionManager">
            <summary>
            Gets an image that should appear on the product entry in VS 10 Extension Manager.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.VS.Customization.ReSharperApplicationDescriptor.UpdatesFilterUri">
            <summary>
            Gets the URI to request for the product updates, if available. //TODO:link to updates format info
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.VS.Customization.ReSharperApplicationDescriptor.VsMarkerTypeProviderGuid">
            <summary>
            Gets the GUID for the Visual Studio Marker Type Provider.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Internal.Debugger.DebuggerHostApi">
            <summary>
            Shared API to the <see cref="T:JetBrains.ReSharper.Features.Internal.Debugger.DebuggerHostServer"/>.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Internal.Debugger.IDebuggerHostApi">
            <summary>
            Shared API to the <see cref="T:JetBrains.ReSharper.Features.Internal.Debugger.DebuggerHostServer"/>.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Internal.Debugger.IDebuggerHostApi.AttachToProcess(System.UInt32)">
            <summary>
            Instructs the debugger to attach to the process with the PID <paramref name="pid"/>.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Internal.Debugger.IDebuggerHostApi.DetachAll">
            <summary>
            Instructs the debugger to detach from all the debuggee processes.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Internal.Debugger.DebuggerHostApi.GetInstance(System.UInt32)">
            <summary>
            Gets the API to the debugger host running in the given process.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Internal.Debugger.DebuggerHostApi.AttachToProcess(System.UInt32)">
            <summary>
            Instructs the debugger to attach to the process with the PID <paramref name="pid"/>.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Internal.Debugger.DebuggerHostApi.DetachAll">
            <summary>
            Instructs the debugger to detach from all the debuggee processes.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Internal.Debugger.DebuggerHostClient">
            <summary>
            Client for controlling the debugger in another process with <see cref="T:JetBrains.ReSharper.Features.Internal.Debugger.DebuggerHostServer"/> running in that process.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Internal.Debugger.DebuggerHostClient.AttachDebugger(System.Diagnostics.Process,System.Diagnostics.Process)">
            <summary>
            Instructs the remote (or local) <see cref="T:JetBrains.ReSharper.Features.Internal.Debugger.DebuggerHostServer"/> in the <paramref name="debugger"/> process to attach to the <paramref name="debuggee"/> process.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Internal.Debugger.DebuggerHostClient.DetachAll(System.Diagnostics.Process)">
            <summary>
            Instructs the remote (or local) <see cref="T:JetBrains.ReSharper.Features.Internal.Debugger.DebuggerHostServer"/> in the <paramref name="debugger"/> process to detach from all the debuggee processes.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Internal.Debugger.DebuggerHostServer">
            <summary>
            Runs in the debugger-aware process and receives remote requests for debugging through COM RPC.
            Advertises an <see cref="T:JetBrains.ReSharper.Features.Internal.Debugger.IDebuggerHostApi"/> / <see cref="T:JetBrains.ReSharper.Features.Internal.Debugger.DebuggerHostApi"/> instance to the Running Objects Table.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Internal.Debugger.DebuggerHostServer.GetInstance(System.UInt32)">
            <summary>
            Gets the API to the debugger host running in the given process.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Internal.Debugger.DebuggerHostServer.GetInstanceDynamic(System.UInt32)">
            <summary>
            Gets the API to the debugger host running in the given process as a late-bound <see cref="T:System.Object"/>.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Internal.Debugger.DebuggerHostServer.AttachToProcess(System.UInt32)">
            <summary>
            Instructs the debugger to attach to the process with the PID <paramref name="pid"/>.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Internal.Debugger.DebuggerHostServer.DetachAll">
            <summary>
            Instructs the debugger to detach from all the debuggee processes.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Internal.Debugger.DebuggerHostServer.InitRot">
            <summary>
            Register/Revoke the Running Objects Table entry.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Internal.Debugger.DebuggerHostServer.System#IDisposable#Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Internal.Debugger.DebuggerHostServer.JetBrains#ComponentModel#IComponent#Init">
            <summary>
            <para>Initializes the component. Called by the component container after the component is created.</para>
            <para><see cref="M:System.IDisposable.Dispose"/> is the pairing method that's guaranteed to be called by the component container to tear down your component.</para>
            <para>You must not access other components before your <see cref="M:JetBrains.ComponentModel.IComponent.Init"/> method is called.</para>
            <para>All of the components that you access from <see cref="M:JetBrains.ComponentModel.IComponent.Init"/> are guaranteed to exist when your <see cref="M:System.IDisposable.Dispose"/> is called. Any other component might be missing by that time, and trying to get it will throw an exception.</para>
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Environment.Options.VisualStudioIntegrationPage">
            <summary>
            The environment options page.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Environment.Options.VisualStudioIntegrationPage.#ctor">
            <summary>
            Inits the base, sets the PID that will be given out thru <see cref="P:JetBrains.UI.Options.IOptionsPage.Id"/>.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.VS.SolutionBuilder.VsSolutionBuilder">
            <summary>
            Invokes Visual Studio to build the projects.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.VS.SolutionBuilder.VsSolutionBuilder.myIsReportingErrors">
            <summary>
            This is a supplementary component to wind up VS builds and track their progress.
            Therefore, most of its warnings are non-fatal, even though we should be aware of them and should try to fix them.
            Set up by Ctor, tells whether we're reporting non-fatal errors.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.VS.SolutionBuilder.VsSolutionBuilder.CreateBuildSessionFromVsSolution(JetBrains.ProjectModel.ISolution,JetBrains.ReSharper.SolutionBuilder.SolBuilderDuo.BuildSessionSeverity,JetBrains.ProjectModel.IProject[])">
            <summary>
            Creates a session by adding all the projects from the solution.
            // TODO: toposort
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.VS.SolutionBuilder.VsSolutionBuilder.ProtoGetProjectLayers(System.Collections.Generic.IEnumerable{JetBrains.ProjectModel.IProject})">
            <summary>
            [PROTOTYPE IMPLEMENTATION, INTERNAL USE ONLY]
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.VS.SolutionBuilder.VsSolutionBuilder.InitAttachDevenv">
            <summary>
            Listen to the DEVENV events.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.VS.SolutionBuilder.VsSolutionBuilder.InitSelfPromotion">
            <summary>
            Promotes self as the active implementation.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.VS.SolutionBuilder.VsSolutionBuilder.BeginRun(JetBrains.ReSharper.SolutionBuilder.SolBuilderDuo.BuildSession)">
            <summary>
            Begins running a build of the session (from <see cref="M:JetBrains.ReSharper.SolutionBuilder.ISolutionBuilder.CreateSession(JetBrains.ReSharper.SolutionBuilder.SolBuilderDuo.BuildSessionSeverity,JetBrains.ProjectModel.IProject[])"/>), async.
            It's an error to invoke this method when <see cref="P:JetBrains.ReSharper.SolutionBuilder.ISolutionBuilder.RunningSession"/> is present.
            </summary>
            <param name="session">The session to run the build of. Must not be used yet.</param>
        </member>
        <member name="M:JetBrains.ReSharper.VS.SolutionBuilder.VsSolutionBuilder.CreateSession(JetBrains.ReSharper.SolutionBuilder.SolBuilderDuo.BuildSessionSeverity,JetBrains.ProjectModel.IProject[])">
            <summary>
            Creates a new build session.
            </summary>
            <param name="severity">How to build the projects.</param>
            <param name="projectsToBuild">The projects that must be included in the build (others might be included as needed), or an empty array to build the whole solution.</param>
            <returns>The new session on which the build could be started and the progress could be tracked.</returns>
        </member>
        <member name="M:JetBrains.ReSharper.VS.SolutionBuilder.VsSolutionBuilder.Init">
            <summary>
            <para>Initializes the component. Called by the component container after the component is created.</para>
            <para><see cref="M:System.IDisposable.Dispose"/> is the pairing method that's guaranteed to be called by the component container to tear down your component.</para>
            <para>You must not access other components before your <see cref="M:JetBrains.ComponentModel.IComponent.Init"/> method is called.</para>
            <para>All of the components that you access from <see cref="M:JetBrains.ComponentModel.IComponent.Init"/> are guaranteed to exist when your <see cref="M:System.IDisposable.Dispose"/> is called. Any other component might be missing by that time, and trying to get it will throw an exception.</para>
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.VS.SolutionBuilder.VsSolutionBuilder.RunningSession">
            <summary>
            Gets the build session being currently run by the solution builder. <c>Null</c> if idle.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.VS.SolutionBuilder.BuildSettingsOverrider.GetAdditionalConditionalConstants(JetBrains.ProjectModel.ISolution)">
            <summary>
            Additional precompiler definitions for the build.
            </summary>
        </member>
    </members>
</doc>
