<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Gallio.AutoCAD</name>
    </assembly>
    <members>
        <member name="T:Gallio.AutoCAD.IAcadPluginLocator">
            <summary>
            Provides the path to an AutoCAD plugin.
            </summary>
        </member>
        <member name="M:Gallio.AutoCAD.IAcadPluginLocator.GetPluginPath(System.String)">
            <summary>
            Gets the location of the AutoCAD plugin for the specified version.
            </summary>
            <param name="acadVersion">
            The version reported to Gallio from AutoCAD. This is that same value the <c>ACADVER</c>
            variable provides in AutoCAD. Specify <c>null</c> to find the plugin with highest version.
            </param>
            <returns>The location of the AutoCAD plugin.</returns>
            <exception cref="T:System.IO.FileNotFoundException">If an AutoCAD plugin can't be found.</exception>
        </member>
        <member name="T:Gallio.AutoCAD.Commands.AcadCommand">
            <summary>
            The base class for commands that can be sent to the AutoCAD process.
            </summary>
        </member>
        <member name="M:Gallio.AutoCAD.Commands.AcadCommand.#ctor(System.String)">
            <summary>
            Initializes a new <see cref="T:Gallio.AutoCAD.Commands.AcadCommand"/> object.
            </summary>
            <param name="globalName">The global name for the command.</param>
        </member>
        <member name="M:Gallio.AutoCAD.Commands.AcadCommand.GetArguments(System.Object)">
            <summary>
            Gets the command's arguments.
            </summary>
            <param name="application">The <c>AcadApplication</c> COM object.</param>
        </member>
        <member name="M:Gallio.AutoCAD.Commands.AcadCommand.GetArgumentsImpl(System.Object)">
            <summary>
            Gets the command's arguments.
            </summary>
            <param name="application">The <c>AcadApplication</c> COM object.</param>
            <remarks>
            This method must not return null.
            </remarks>
        </member>
        <member name="P:Gallio.AutoCAD.Commands.AcadCommand.GlobalName">
            <summary>
            Gets the global name for this command.
            </summary>
        </member>
        <member name="M:Gallio.AutoCAD.Commands.AcadCommand.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Gallio.AutoCAD.Commands.AcadCommand.ToLispExpression(System.Object)">
            <summary>
            Creates a string representing the command as a AutoLISP expression.
            </summary>
            <param name="application">The <c>AcadApplication</c> COM object.</param>
            <returns>An AutoLISP expression.</returns>
        </member>
        <member name="T:Gallio.AutoCAD.Commands.AcadCommandRunner">
            <summary>
            Runs commands in a remote AutoCAD process via COM interop.
            </summary>
        </member>
        <member name="M:Gallio.AutoCAD.Commands.AcadCommandRunner.BeginRun(Gallio.AutoCAD.Commands.AcadCommand,Gallio.Common.Concurrency.IProcess,System.AsyncCallback,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Gallio.AutoCAD.Commands.AcadCommandRunner.EndRun(System.IAsyncResult)">
            <inheritdoc/>
        </member>
        <member name="T:Gallio.AutoCAD.Commands.CreateEndpointAndWaitCommand">
            <summary>
            Maps to the <c>CREATEENDPOINTANDWAIT</c> command.
            </summary>
            <remarks>
            <para>
            The <c>CREATEENDPOINTANDWAIT</c> command is provided by the plugin assembly.
            If it is not loaded into AutoCAD this command will not be available.
            </para>
            </remarks>
        </member>
        <member name="M:Gallio.AutoCAD.Commands.CreateEndpointAndWaitCommand.#ctor(System.String,System.Guid)">
            <summary>
            Initializes a new <see cref="T:Gallio.AutoCAD.Commands.CreateEndpointAndWaitCommand"/> object.
            </summary>
        </member>
        <member name="M:Gallio.AutoCAD.Commands.CreateEndpointAndWaitCommand.GetArgumentsImpl(System.Object)">
            <inheritdoc/>
        </member>
        <member name="P:Gallio.AutoCAD.Commands.CreateEndpointAndWaitCommand.IpcPortName">
            <summary>
            Gets or sets the IPC port name that the endpoint should create.
            </summary>
        </member>
        <member name="P:Gallio.AutoCAD.Commands.CreateEndpointAndWaitCommand.LinkId">
            <summary>
            Gets or sets the unique id of the client/server pair.
            </summary>
        </member>
        <member name="T:Gallio.AutoCAD.Commands.IAcadCommandRunner">
            <summary>
            Runs commands in a remote AutoCAD process.
            </summary>
        </member>
        <member name="M:Gallio.AutoCAD.Commands.IAcadCommandRunner.BeginRun(Gallio.AutoCAD.Commands.AcadCommand,Gallio.Common.Concurrency.IProcess,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous command in the specified AutoCAD process.
            </summary>
            <param name="command">The command to run.</param>
            <param name="process">The AutoCAD process.</param>
            <param name="completionCallback">A method to be called when the asynchronous command is completed.</param>
            <param name="asyncState">A object that can be used to distinguish this asynchronous command from others.</param>
        </member>
        <member name="M:Gallio.AutoCAD.Commands.IAcadCommandRunner.EndRun(System.IAsyncResult)">
            <summary>
            Ends an asynchronous command, blocking until the command has completed.
            </summary>
            <param name="result">The pending asynchronous command.</param>
        </member>
        <member name="T:Gallio.AutoCAD.Commands.NetLoadCommand">
            <summary>
            Maps to the <c>NETLOAD</c> command.
            </summary>
        </member>
        <member name="M:Gallio.AutoCAD.Commands.NetLoadCommand.#ctor(Gallio.Runtime.Logging.ILogger,Gallio.AutoCAD.IAcadPluginLocator)">
            <summary>
            Initializes a new <see cref="T:Gallio.AutoCAD.Commands.NetLoadCommand"/> object.
            </summary>
        </member>
        <member name="M:Gallio.AutoCAD.Commands.NetLoadCommand.GetArgumentsImpl(System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:Gallio.AutoCAD.Isolation.AcadTestIsolationContext">
            <summary>
            A test isolation context that launches AutoCAD and runs tasks remotely.
            </summary>
        </member>
        <member name="M:Gallio.AutoCAD.Isolation.AcadTestIsolationContext.#ctor(Gallio.Runtime.Logging.ILogger,Gallio.AutoCAD.ProcessManagement.IAcadProcess)">
            <summary>
            Creates a test isolation context.
            </summary>
            <param name="logger">The logger.</param>
            <param name="process">The AutoCAD process.</param>
            <exception cref="T:System.ArgumentNullException">
            Thrown if <paramref name="logger"/> or <paramref name="process"/> is null.
            </exception>
        </member>
        <member name="P:Gallio.AutoCAD.Isolation.AcadTestIsolationContext.RequiresSingleThreadedExecution">
            <inheritdoc />
        </member>
        <member name="M:Gallio.AutoCAD.Isolation.AcadTestIsolationContext.BeginBatchImpl(Gallio.Model.Isolation.StatusReporter)">
            <inheritdoc />
        </member>
        <member name="M:Gallio.AutoCAD.Isolation.AcadTestIsolationContext.RunIsolatedTaskImpl``1(Gallio.Runtime.Hosting.HostSetup,Gallio.Model.Isolation.StatusReporter,System.Object[])">
            <inheritdoc />
        </member>
        <member name="P:Gallio.AutoCAD.Isolation.AcadTestIsolationContext.Process">
            <summary>
            Gets the AutoCAD process used by the isolation context.
            </summary>
        </member>
        <member name="T:Gallio.AutoCAD.Isolation.AcadTestIsolationProvider">
            <summary>
            A test isolation provider that launches AutoCAD and runs tasks remotely.
            </summary>
        </member>
        <member name="M:Gallio.AutoCAD.Isolation.AcadTestIsolationProvider.#ctor(Gallio.AutoCAD.ProcessManagement.IAcadProcessFactory)">
            <summary>
            Creates a test isolation provider.
            </summary>
        </member>
        <member name="M:Gallio.AutoCAD.Isolation.AcadTestIsolationProvider.CreateContextImpl(Gallio.Model.Isolation.TestIsolationOptions,Gallio.Runtime.Logging.ILogger)">
            <inheritdoc />
        </member>
        <member name="T:Gallio.AutoCAD.Preferences.AcadPreferenceManager">
            <summary>
            Default implementation of <see cref="T:Gallio.AutoCAD.Preferences.IAcadPreferenceManager"/>.
            </summary>
        </member>
        <member name="M:Gallio.AutoCAD.Preferences.AcadPreferenceManager.#ctor(Gallio.Runtime.Preferences.IPreferenceManager)">
            <summary>
            Creates a new <see cref="T:Gallio.AutoCAD.Preferences.AcadPreferenceManager"/>.
            </summary>
            <param name="preferenceManager">A preference manager.</param>
        </member>
        <member name="P:Gallio.AutoCAD.Preferences.AcadPreferenceManager.CommandLineArguments">
            <inheritdoc/>
        </member>
        <member name="P:Gallio.AutoCAD.Preferences.AcadPreferenceManager.StartupAction">
            <inheritdoc/>
        </member>
        <member name="P:Gallio.AutoCAD.Preferences.AcadPreferenceManager.UserSpecifiedExecutable">
            <inheritdoc/>
        </member>
        <member name="P:Gallio.AutoCAD.Preferences.AcadPreferenceManager.WorkingDirectory">
            <inheritdoc/>
        </member>
        <member name="T:Gallio.AutoCAD.Preferences.IAcadPreferenceManager">
            <summary>
            Defines user configurable preferences for Gallio's AutoCAD integration components.
            </summary>
        </member>
        <member name="P:Gallio.AutoCAD.Preferences.IAcadPreferenceManager.CommandLineArguments">
            <summary>
            Command line arguments to be passed to new AutoCAD processes.
            </summary>
        </member>
        <member name="P:Gallio.AutoCAD.Preferences.IAcadPreferenceManager.StartupAction">
            <summary>
            Specifies the <see cref="P:Gallio.AutoCAD.Preferences.IAcadPreferenceManager.StartupAction"/>.
            </summary>
        </member>
        <member name="P:Gallio.AutoCAD.Preferences.IAcadPreferenceManager.UserSpecifiedExecutable">
            <summary>
            The path to the AutoCAD executable to use for new processes.
            </summary>
        </member>
        <member name="P:Gallio.AutoCAD.Preferences.IAcadPreferenceManager.WorkingDirectory">
            <summary>
            The working directory to use for new AutoCAD processes.
            </summary>
        </member>
        <member name="T:Gallio.AutoCAD.Preferences.StartupAction">
            <summary>
            Describes how Gallio should start the AutoCAD process.
            </summary>
        </member>
        <member name="F:Gallio.AutoCAD.Preferences.StartupAction.StartMostRecentlyUsed">
            <summary>
            Start whichever AutoCAD executable was most recently used.
            </summary>
        </member>
        <member name="F:Gallio.AutoCAD.Preferences.StartupAction.AttachToExisting">
            <summary>
            Find an existing AutoCAD process and use that.
            </summary>
        </member>
        <member name="F:Gallio.AutoCAD.Preferences.StartupAction.StartUserSpecified">
            <summary>
            Start a explicitly specified AutoCAD executable.
            </summary>
        </member>
        <member name="T:Gallio.AutoCAD.ProcessManagement.AcadProcessBase">
            <summary>
            Default base class for <see cref="T:Gallio.AutoCAD.ProcessManagement.IAcadProcess"/> implementations.
            </summary>
            <remarks>
            <c>AcadProcessBase</c> provides the basics needed to communicate with
            the AutoCAD process. There are two derived types, <see cref="T:Gallio.AutoCAD.ProcessManagement.CreatedAcadProcess"/>
            and <see cref="T:Gallio.AutoCAD.ProcessManagement.ExistingAcadProcess"/>, that provide a means to launch
            new AutoCAD processes and to attach to existing ones, respectively.
            </remarks>
        </member>
        <member name="M:Gallio.AutoCAD.ProcessManagement.AcadProcessBase.#ctor(Gallio.Runtime.Logging.ILogger,Gallio.AutoCAD.Commands.IAcadCommandRunner,Gallio.AutoCAD.IAcadPluginLocator)">
            <summary>
            Creates a new <see cref="T:Gallio.AutoCAD.ProcessManagement.AcadProcessBase"/> instance.
            </summary>
            <param name="logger">A logger.</param>
            <param name="commandRunner">A AutoCAD command runner.</param>
            <param name="pluginLocator">A AutoCAD plugin locator.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="logger"/> or <paramref name="commandRunner"/> are null.
            </exception>
        </member>
        <member name="M:Gallio.AutoCAD.ProcessManagement.AcadProcessBase.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:Gallio.AutoCAD.ProcessManagement.AcadProcessBase.Dispose(System.Boolean)">
            <summary>
            Frees resources.
            </summary>
        </member>
        <member name="M:Gallio.AutoCAD.ProcessManagement.AcadProcessBase.Start(System.String,System.Guid,Gallio.Runtime.Debugging.DebuggerSetup)">
            <inheritdoc/>
        </member>
        <member name="M:Gallio.AutoCAD.ProcessManagement.AcadProcessBase.StartProcess(Gallio.Runtime.Debugging.DebuggerSetup)">
            <summary>
            Derived types are resposible for creating an returning a <see cref="T:Gallio.Common.Concurrency.IProcess"/> instance.
            The return value must represent a running AutoCAD process cabable of receiving messages.
            </summary>
            <param name="debuggerSetup">The debugger setup or null if the debugger shouldn't be used.</param>
            <returns>A <see cref="T:Gallio.Common.Concurrency.IProcess"/> instance.</returns>
        </member>
        <member name="P:Gallio.AutoCAD.ProcessManagement.AcadProcessBase.Logger">
            <summary>
            The logger.
            </summary>
        </member>
        <member name="P:Gallio.AutoCAD.ProcessManagement.AcadProcessBase.ReadyPollInterval">
            <summary>
            Gets or sets how frequently the AutoCAD process should
            be polled to see if it is ready after calling <see cref="M:Gallio.AutoCAD.ProcessManagement.AcadProcessBase.Start(System.String,System.Guid,Gallio.Runtime.Debugging.DebuggerSetup)"/>.
            </summary>
        </member>
        <member name="P:Gallio.AutoCAD.ProcessManagement.AcadProcessBase.ReadyTimeout">
            <summary>
            Gets or sets how long to wait for the AutoCAD process to
            become ready after calling <see cref="M:Gallio.AutoCAD.ProcessManagement.AcadProcessBase.Start(System.String,System.Guid,Gallio.Runtime.Debugging.DebuggerSetup)"/>.
            </summary>
        </member>
        <member name="T:Gallio.AutoCAD.ProcessManagement.AcadProcessFactory">
            <summary>
            Creates <see cref="T:Gallio.AutoCAD.ProcessManagement.IAcadProcess"/> objects.
            </summary>
        </member>
        <member name="M:Gallio.AutoCAD.ProcessManagement.AcadProcessFactory.#ctor(Gallio.Runtime.Logging.ILogger,Gallio.Common.IO.IFileSystem,Gallio.Common.Concurrency.IProcessFinder,Gallio.Common.Concurrency.IProcessCreator,Gallio.Runtime.Debugging.IDebuggerManager,Gallio.AutoCAD.Preferences.IAcadPreferenceManager,Gallio.AutoCAD.IAcadLocator,Gallio.AutoCAD.IAcadPluginLocator)">
            <summary>
            Intializes a new <see cref="T:Gallio.AutoCAD.ProcessManagement.AcadProcessFactory"/> instance.
            </summary>
            <param name="logger">An <see cref="T:Gallio.Runtime.Logging.ILogger"/> instance.</param>
            <param name="fileSystem">An <see cref="T:Gallio.Common.IO.IFileSystem"/> instance.</param>
            <param name="processFinder">A process finder.</param>
            <param name="processCreator">A process creator.</param>
            <param name="debuggerManager">An <see cref="T:Gallio.Runtime.Debugging.IDebuggerManager"/> instance.</param>
            <param name="preferenceManager">The AutoCAD preference manager.</param>
            <param name="acadLocator">The AutoCAD locator.</param>
            <param name="pluginLocator">An AutoCAD plugin locator.</param>
        </member>
        <member name="M:Gallio.AutoCAD.ProcessManagement.AcadProcessFactory.CreateProcess(Gallio.Model.Isolation.TestIsolationOptions)">
            <inheritdoc/>
            <remarks>
            <para>
            <c>CreateProcess</c> creates <see cref="T:Gallio.AutoCAD.ProcessManagement.IAcadProcess"/> objects that use AutoCAD's
            OLE Automation support for the initial communication with the AutoCAD process.
            Unfortunately, AutoCAD does not register each process with a unique moniker so
            retrieving the "AutoCAD.Application" object for a specific process using
            <see cref="M:System.Runtime.InteropServices.Marshal.GetActiveObject(System.String)"/> is not possible. To handle this the
            <see cref="M:Gallio.AutoCAD.ProcessManagement.AcadProcessFactory.CreateProcess(Gallio.Model.Isolation.TestIsolationOptions)"/> method throws <see cref="T:System.NotSupportedException"/>
            whenever it is unsure what AutoCAD process it will acquire from the ROT.
            </para>
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            If attaching to an existing process and none can be found.
            </exception>
            <exception cref="T:System.NotSupportedException">
            If creating a new AutoCAD process and an existing one is found.
            If attaching to an existing process and more than one is found.
            </exception>
        </member>
        <member name="T:Gallio.AutoCAD.ProcessManagement.CreatedAcadProcess">
            <summary>
            Implementation of <see cref="T:Gallio.AutoCAD.ProcessManagement.IAcadProcess"/> that represents
            a newly created AutoCAD process.
            </summary>
            <remarks>
            The AutoCAD process will be shut down when it is no longer in use by Gallio.
            </remarks>
        </member>
        <member name="M:Gallio.AutoCAD.ProcessManagement.CreatedAcadProcess.#ctor(Gallio.Runtime.Logging.ILogger,Gallio.AutoCAD.Commands.IAcadCommandRunner,System.String,Gallio.Common.Concurrency.IProcessCreator,Gallio.Runtime.Debugging.IDebuggerManager,Gallio.AutoCAD.IAcadPluginLocator)">
            <summary>
            Creates a new <see cref="T:Gallio.AutoCAD.ProcessManagement.CreatedAcadProcess"/> instance.
            </summary>
            <param name="logger">A logger.</param>
            <param name="commandRunner">A AutoCAD command runner.</param>
            <param name="executable">The path to the AutoCAD executable.</param>
            <param name="processCreator">A process creator.</param>
            <param name="debuggerManager">A debugger mananger.</param>
            <param name="pluginLocator">A plugin locator.</param>
        </member>
        <member name="M:Gallio.AutoCAD.ProcessManagement.CreatedAcadProcess.StartProcess(Gallio.Runtime.Debugging.DebuggerSetup)">
            <inheritdoc/>
        </member>
        <member name="M:Gallio.AutoCAD.ProcessManagement.CreatedAcadProcess.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="P:Gallio.AutoCAD.ProcessManagement.CreatedAcadProcess.Arguments">
            <summary>
            Gets the command line arguments passed to the AutoCAD process.
            </summary>
        </member>
        <member name="P:Gallio.AutoCAD.ProcessManagement.CreatedAcadProcess.FileName">
            <summary>
            Gets the path the to AutoCAD executable.
            </summary>
        </member>
        <member name="P:Gallio.AutoCAD.ProcessManagement.CreatedAcadProcess.WorkingDirectory">
            <summary>
            Gets the working directory used to start a new AutoCAD process.
            </summary>
        </member>
        <member name="T:Gallio.AutoCAD.ProcessManagement.ExistingAcadProcess">
            <summary>
            Implementation of <see cref="T:Gallio.AutoCAD.ProcessManagement.IAcadProcess"/> that represents
            an existing AutoCAD process appropriated by Gallio to execute code in.
            </summary>
            <remarks>
            The AutoCAD process will remain running after Gallio is finished
            using it. However, it is unlikely that subsequent test runs would
            be successful within the same process.
            </remarks>
        </member>
        <member name="M:Gallio.AutoCAD.ProcessManagement.ExistingAcadProcess.#ctor(Gallio.Runtime.Logging.ILogger,Gallio.AutoCAD.Commands.IAcadCommandRunner,Gallio.Common.Concurrency.IProcess,Gallio.AutoCAD.IAcadPluginLocator)">
            <summary>
            Creates a new <see cref="T:Gallio.AutoCAD.ProcessManagement.ExistingAcadProcess"/> instane.
            </summary>
            <param name="logger">A logger.</param>
            <param name="commandRunner">An AutoCAD command runner.</param>
            <param name="process">The existing AutoCAD process.</param>
            <param name="pluginLocator">An AutoCAD plugin locator.</param>
        </member>
        <member name="M:Gallio.AutoCAD.ProcessManagement.ExistingAcadProcess.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Gallio.AutoCAD.ProcessManagement.ExistingAcadProcess.StartProcess(Gallio.Runtime.Debugging.DebuggerSetup)">
            <inheritdoc/>
        </member>
        <member name="T:Gallio.AutoCAD.ProcessManagement.IAcadProcess">
            <summary>
            Represents the AutoCAD process.
            </summary>
        </member>
        <member name="M:Gallio.AutoCAD.ProcessManagement.IAcadProcess.Start(System.String,System.Guid,Gallio.Runtime.Debugging.DebuggerSetup)">
            <summary>
            Starts the AutoCAD process and the client.
            </summary>
            <param name="ipcPortName">The IPC port name.</param>
            <param name="linkId">The unique id of the client/server pair.</param>
            <param name="debuggerSetup">The debugger setup or null if the process shouldn't be debuggged.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="ipcPortName"/> is null.</exception>
        </member>
        <member name="T:Gallio.AutoCAD.ProcessManagement.IAcadProcessFactory">
            <summary>
            Creates <see cref="T:Gallio.AutoCAD.ProcessManagement.IAcadProcess"/> objects.
            </summary>
        </member>
        <member name="M:Gallio.AutoCAD.ProcessManagement.IAcadProcessFactory.CreateProcess(Gallio.Model.Isolation.TestIsolationOptions)">
            <summary>
            Creates a new <see cref="T:Gallio.AutoCAD.ProcessManagement.IAcadProcess"/> object.
            </summary>
            <param name="options">The test isolation options.</param>
            <returns>A new <see cref="T:Gallio.AutoCAD.ProcessManagement.IAcadProcess"/> object.</returns>
            <exception cref="T:Gallio.Model.Isolation.TestIsolationOptions">
            If <paramref name="options"/> is null.
            </exception>
        </member>
        <member name="T:Gallio.AutoCAD.AcadLocator">
            <summary>
            Finds the AutoCAD install location based on registry keys.
            </summary>
        </member>
        <member name="M:Gallio.AutoCAD.AcadLocator.GetMostRecentlyUsed">
            <inheritdoc/>
        </member>
        <member name="T:Gallio.AutoCAD.AcadPluginLocator">
            <summary>
            Finds the AutoCAD plugin location. 
            </summary>
        </member>
        <member name="M:Gallio.AutoCAD.AcadPluginLocator.#ctor(Gallio.Runtime.Logging.ILogger,Gallio.Common.IO.IFileSystem)">
            <summary>
            Creates a new AutoCAD plugin locator.
            </summary>
            <param name="logger">A logger.</param>
            <param name="fileSystem">A file system.</param>
        </member>
        <member name="M:Gallio.AutoCAD.AcadPluginLocator.GetPluginPath(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Gallio.AutoCAD.AcadPluginLocator.TryParse(System.String,System.Version@)">
            <summary>
            Converts the specified ACADVER value into a <see cref="T:System.Version"/>.
            </summary>
            <remarks>
            Autodesk has been using the format "XX.Ys (LMS Tech)" for the ACADVER value since AutoCAD 2005.
            The "XX" is the major version number and "Y" is the minor version number.
            </remarks>
        </member>
        <member name="M:Gallio.AutoCAD.AcadPluginLocator.GetPluginVersion(System.String)">
            <summary>
            Gets the version of AutoCAD that the specified plugin DLL targets.
            </summary>
            <returns>
            The version targetted or <c>null</c> if it could not be determined.
            </returns>
            <remarks>
            This is done by getting the version number out of filenames in the format
            Gallio.AutoCAD.Plugin{version}.dll. The version component should be in
            the format XXY. The first two characters are interpreted as the major
            version number and the next character (and any subsequent characters) as the
            minor version number. All of these characters must be digits.
            </remarks>
        </member>
        <member name="T:Gallio.AutoCAD.IAcadLocator">
            <summary>
            Finds the AutoCAD install location.
            </summary>
        </member>
        <member name="M:Gallio.AutoCAD.IAcadLocator.GetMostRecentlyUsed">
            <summary>
            Gets the location most recently used AutoCAD installation.
            </summary>
            <exception cref="T:System.IO.FileNotFoundException">If the location can't be found.</exception>
        </member>
    </members>
</doc>
