<?xml version="1.0"?>
<doc>
    <assembly>
        <name>JetBrains.ReSharper.Psi.Services</name>
    </assembly>
    <members>
        <member name="T:JetBrains.ReSharper.Psi.Services.IDeclaredElementInstanceToDataMap`2">
            <summary>
            IDeclaredElementInstance to TValue map.
            Rehash should be called after any PSI change
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Psi.Services.DeclaredElementInstancePointerMap`2">
            <summary>
            IDeclaredElementInstance to TValue map.
            Rehash should be called after any PSI change
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.Services.LiteralService.IsStringLiteral(JetBrains.ReSharper.Psi.Tree.ITreeNode)">
            <summary>
            Determines whether the specified <paramref name="element"/> is string literal.
            </summary>
            <param name="element">element for test</param>
            <returns><c>true</c> - if success; otherwise - <c>false</c></returns>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.Services.LiteralService.IsConstantLiteral(JetBrains.ReSharper.Psi.Tree.ITreeNode)">
            <summary>
            Determines whether the specified <paramref name="element"/> is constant literal.
            </summary>
            <param name="element">element for test</param>
            <returns><c>true</c> - if success; otherwise - <c>false</c></returns>
        </member>
        <member name="T:JetBrains.ReSharper.Psi.Services.IDeclaredElementToDataMap`1">
            <summary>
            IDeclaredElement to TValue map.
            Rehash should be called after any PSI change
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Psi.Services.ElementPointerMap`1">
            <summary>
            IDeclaredElement to TValue map.
            Rehash should be called after any PSI change
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Psi.Services.ElementEnvoyMap`1">
            <summary>
            IDeclaredElement to TValue map.
            Rehash should be called after any PSI change
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.Services.PsiDataRules.DeclaredElementFromDocument(JetBrains.Application.DataContext.IDataContext)">
            <summary>
            See <see cref="T:JetBrains.Application.DataContext.DataRule`1"/> ctor for tuple semantic comments.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Psi.Services.DataConstants.DECLARED_ELEMENT">
            <summary>
            For getting data ONLY.
            You MUST NOT create data rules for this constant. You MUST always use <see cref="F:JetBrains.ReSharper.Psi.Services.DataConstants.DECLARED_ELEMENTS"/> instead when supplying data.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.Services.DataConstantsEx.ToDeclaredElementsDataConstant(JetBrains.ReSharper.Psi.IDeclaredElement)">
            <summary>
            Returns the declared element as the declared elements data constant: a list of one non-Null item, or Null.
            Prevents getting collections with null elements inside.
            In other words, makes it valid for the data rule.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.Services.DataConstantsEx.ToDeclaredElementsDataConstant(System.Collections.Generic.IList{JetBrains.ReSharper.Psi.IDeclaredElement})">
            <summary>
            Makes sure the declared elements collection does not contain Null items and is non-empty.
            Filters out Nulls, returns Null instead of empty collections.
            In other words, makes it valid for the data rule.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.Services.ILanguageReferenceSelector.GetBaseConstructor(JetBrains.ReSharper.Psi.IConstructor)">
            <summary>
            Get the base constructor call from given constructor
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.Services.ILanguageReferenceSelector.GetCandidates(JetBrains.ReSharper.Psi.Resolve.IReference,JetBrains.ReSharper.Psi.Services.ReferencePreferenceKind)">
            <summary>
            Return the candidates to go to declaration action
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Psi.Services.ReparseContext.ContextType">
            <summary>
            TODO: this enum is C# specific. Move it to C#
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Feature.Services.Util.IPrefferedReference">
            <summary>
            Such reference will be always selected in <see cref="M:JetBrains.ReSharper.Psi.Services.TextControlToPsi.GetReferencesAtOffset(JetBrains.ProjectModel.ISolution,JetBrains.DocumentModel.IDocument,System.Int32)"/> and <see cref="!:JetBrains.ReSharper.Feature.Services.Util.CandidatesUtil.SelectGoodReferences"/>
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Psi.Services.StructuralSearch.IElementMatcher.Words">
            <summary>
            For WordIndex lookup. Only words specific for this element, not for children or siblings.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.Services.StructuralSearch.IStructuralSearchPattern.Check(JetBrains.ProjectModel.ISolution)">
            <summary>
            Returns empty string if pattern is correct
            </summary>
            <param name="solution"></param>
            <returns></returns>
        </member>
        <member name="F:JetBrains.ReSharper.Psi.Services.StructuralSearch.StructuralSearchPatternParams.IgnoreEmptyStatements">
            <summary>
            Ignore empty statements.
            Useful when matching statement placeholders in C#: "$stmt$;" pattern matches even if there's no empty statement at the end.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Psi.Services.StructuralSearch.StructuralSearchPatternParams.TreatPostfixAndPrefixOperatorEquivalent">
            <summary>
            Only if they are not used in expressions
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Psi.Services.StructuralSearch.StructuralSearchPatternParams.MatchAllMembersWithoutModifiers">
            <summary>
            If this modifier is set pattern "$type$ $method$($args$) $stmt$" will match all methods no matter
            which modifiers they have (private/public, static, etc.)
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.Services.TextControlToPsi.SelectReference(JetBrains.DocumentModel.DocumentRange,System.Collections.Generic.IEnumerable{JetBrains.ReSharper.Psi.Resolve.IReference})">
            <summary>
            Selects a reference from DIFFERENT psi files that user is most likely to bear in mind
            </summary>
            <remarks>Generally, we prefer references to the right of the position</remarks>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.Services.TextControlToPsi.SelectReference(JetBrains.ReSharper.Psi.Tree.IFile,JetBrains.DocumentModel.DocumentRange,JetBrains.ReSharper.Psi.Resolve.IReference[])">
            <summary>
            Selects a reference from the same psi file that user is most likely to bear in mind
            </summary>
            <remarks>Generally, we prefer references to the right of the position</remarks>
        </member>
        <member name="T:JetBrains.ReSharper.Psi.Services.ValueTracking.Engine.ValueTrackingNodesRepository">
            <summary>
            Map of IElements to value tracking nodes
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.Services.ValueTracking.Nodes.IPreExpandedNode.InitNode(JetBrains.Application.Progress.SubProgressIndicator)">
            <summary>
            Init data of pre-expanded node (usually calculates set of elements to search)
            May be called several times (when user cancells action)
            </summary>
        </member>
    </members>
</doc>
